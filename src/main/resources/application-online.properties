server.port= 8083
#通用数据源配置
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/e5?charset=utf8mb4&useSSL=false
spring.datasource.username=root
spring.datasource.password=123456

# RabbitMq
spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.port=5672
spring.rabbitmq.username=e5
spring.rabbitmq.password=passwd
spring.rabbitmq.virtual-host=e5
spring.rabbitmq.connection-timeout=15000
#消费者最小数量
spring.rabbitmq.listener.simple.concurrency=1
#消费者最大数量
spring.rabbitmq.listener.simple.max-concurrency=10
#消费者每次从队列获取的消息数量。写多了，如果长时间得不到消费，数据就一直得不到处理
spring.rabbitmq.listener.simple.prefetch=20
#设置消费端手动 ack
spring.rabbitmq.listener.simple.acknowledge-mode=manual
# 限流
#spring.rabbitmq.listener.simple.prefetch=1
#开启 confirm 确认机制
#spring.rabbitmq.publisher-confirms=true
#开启 return 确认机制
spring.rabbitmq.publisher-returns=true
#设置为 true 后 消费者在消息没有被路由到合适队列情况下会被return监听，而不会自动删除
spring.rabbitmq.template.mandatory=true

github.client_id=xxxxxxxxxxxxxxxx
github.client_secret=xxxxxxxxxxxxxxxxxxx